---
title: "QRM_Project_Arima"
format: pdf
editor: visual
---

```{r setup, include=FALSE, echo=FALSE}
```

# Abstract

This project delves into the theoretical framework of two types of models. It aims to compare and contrast the performances of the moving average model and the artificial neural network on the prediction of stock market indices. It also aims to compare how the abnormal data influence two models(pandemic, financial crisis, etc.) It compares the performances of two models on indices of different sectors and markets. We used the data collected from Yahoo Finance with daily frequency from 1 January 2000 to 31 December 2019. We use a rolling window approach to compare ARIMA with the hybrid models to determine whether hybrid ARIM-SGARCH can reflect the specific time series characteristics and predict better. 

# 1. Data Analysis

We perform data analysis and a model-fitting procedure for the logarithmic returns of the S&P500 index. We get the data from Yahoo Finance. Given the hybrid ARIMA-GARCH model, we analyze 19 years of data. We transform the adjusted price into a daily logarithmic return, 

$$
r_t = ln\frac{P_t}{P_{t-1}}
$$
#2. Models

## ARIMA SGARCH - Overview

 In practice, stock prices can be tremendously volatile during economic growth as well as recessions. In such scenarios, when homoskedasticity presumption is violated, it is said that the errors are heteroskedastic. Given that heteroskedasticity can affect the validity or power of statistical tests when using ARIMA models, we consider the ARCH effect. In this model, the error term of the ARIMA model in this process follows SGARCH(1,1) instead of being assumed constant like the ARIMA model.
 
 Firstly, we conducted a rolling forecast based on an ARIMA model with window size(s) equal to 1000. The optimized combination of p and q which has the lowest AIC is used to predict return for the next point. At the end, the vector of forecasted values has the length of 3530 elements, with a starting point at 20 December 2005
 
 Next, we describe and review our implementation of dynamic ARIMA(p,1,q)-SGARCH(1,1) models with GED distribution and window size(s) equal to 1000 and where optimized ARIMA(p,1,q) is taken from the first step. Then, we evaluate the results based on error metrics, performance metrics, and equity curves.
 
 One optimal ARIMA(p,1,q) forecasting model is fitted using a rolling window ap- proach with different combinations of p and q for the values of the input variables. This optimized model which has the lowest value of AIC is used to generate one-day-ahead return. Since the rolling window approach is applied, the next data point is estimated based on the sample size equal to the length of window. The mechanism of this method is illustrated more specifically in the following figure
 
![ARIMA mechanism](images/ARIMA - iteration.png)

## ARIMA SGARCH - Methodology

We first fit ARIMA in the following way:

![ARIMA_SGARCH methodology](images/ARIMA_SGARCH_methodology.png)

Flowchart of the forecasting model ARIMA(p,1,q)-SGARCH(1,1). This flowchart is for
models with window size s = 1000.  

## Error Metrics

In order to evaluate forecast form estimated models, we calculated the following error metrics:
Mean absolute error (MAE)

$$
MAE = \frac{1}{n}\sum_{t=1}^{n}|A_i-F_i|
$$
where: n is the number of errors; $A_i$ is the actual value and $F_i$ is the forecasted value computed by the given model.

Mean square error (MSE)
$$
MSE = \frac{1}{n}\sum_{t=1}^{n}(A_i-F_i)^2
$$

## Results

## Load Package

```{r message=FALSE}
#Load packages
library(tidyquant)
library(fpp3)
library(rugarch)
library(rmgarch)
library(forecast)
```

```{r}
# Import Data
sp_prices <- tq_get("^GSPC",
                 get = "stock.prices",
                 from = "2000-01-01",
                 to = "2021-12-31")
```

# Compute Returns

```{r}
#Compute the log returns
returns <- sp_prices |>
  arrange(date) |>
  mutate(ret = log(adjusted) - log(lag(adjusted))) |>
  select(symbol, date, ret) |>
  drop_na(ret)

data <- returns
```

# Specify sGarch model

```{r}
# Specify sGARCH model
spec <- ugarchspec(
    variance.model =
      list(model = "sGARCH",
           garchOrder = c(1,1)),
      mean.model =
      list(armaOrder = c(0,0),
      include.mean = TRUE),
    distribution.model = "sged"
)
```

# Fit Model

```{r}
# Fit to the data
data %>%
  pull(ret) -> y

sGARCH <- ugarchfit(spec = spec,
                     data = y,
                    solver = 'hybrid',
                    out.sample=1000)
sGARCH
```

# Residual Diagnostic

```{r}
# Standardized residuals
plot(sGARCH, which = 10)

# Standardaied Squared residuals
plot(sGARCH, which = 11)

```

# Rolling Forecast

```{r}
roll <- ugarchroll(spec = spec, 
                   data = data$ret,
                   n.ahead = 1,
                   refit.every = 100,
                   refit.window = "moving",
                   n.start = 1000,
                   solver = "hybrid",
                   window.size = 1000,
                   fit.control = list(),
                   calculate.VaR = TRUE, VaR.alpha = c(0.01, 0.025, 0.05),
                   keep.coef = TRUE)
show(roll)
```

# Error Metircs

```{r}
rugarch::report(roll, type = "fpm")
```

# Series standard error plot

```{r}
plot(roll, which = 3)
```
